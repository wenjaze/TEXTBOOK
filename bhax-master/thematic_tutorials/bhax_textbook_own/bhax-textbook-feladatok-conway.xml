<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" version="5.0" xml:lang="hu">
    <info>
        <title>Helló, Conway!</title>
        <keywordset>
            <keyword/>
        </keywordset>
    </info>
    <section>
        <title>Hangyaszimulációk</title>
        <para>
            Írj Qt C++-ban egy hangyaszimulációs programot, a forrásaidról utólag reverse engineering jelleggel
            készíts UML osztálydiagramot is!
        </para>
        
        <para>
            Megoldás videó: <link xlink:href="https://bhaxor.blog.hu/2018/10/10/myrmecologist">https://bhaxor.blog.hu/2018/10/10/myrmecologist</link>
        </para>
        <para>
            Megoldás forrása: <link xlink:href="https://gitlab.com/nbatfai/bhax/-/tree/master/attention_raising%2FMyrmecologist">https://gitlab.com/nbatfai/bhax/-/tree/master/attention_raising%2FMyrmecologist</link>               
        </para>
        <para>
            A program működése hangyák mozgásának szimulálásán alapul. Mint tudhatjuk a hangyák feromonokat bocsájtanak ki magukból. Ezen a koncepción elindulva készült el a Hangyaszimuláció is. Azokon az útvonalakon, ahol a hangyák feromont bocsájtottak ki úgymond egy súlyozott útvonal alakul ki.
        </para>
        <mediaobject>
                <imageobject>
                    <imagedata fileref="./Conway/ant_1.png"/>
                </imageobject>
            </mediaobject>
            <para>Láthatjuk, hogy ahol a bekarikázott részek vannak, ott a hangyák a feromon hatására követni kezdték egymást.</para>

        <para>
            <link xlink:href="https://en.wikipedia.org/wiki/Reverse_engineering">Reverse engineering</link> módszerrel visszafejtve elkészítjük az UML osztálydiagramot.
        </para> 
        <mediaobject>
            <imageobject>
                    <imagedata fileref="./Conway/ClassDiagram.png"/>
                </imageobject>
            </mediaobject>    
    </section>        
    <section>
        <title>Java életjáték</title>
        <para>
            Írd meg Java-ban a John Horton Conway-féle életjátékot, 
            valósítsa meg a sikló-kilövőt!
        </para>
        
        <para>
            Megoldás forrása: <link xlink:href="./Conway/Sejtautomata.java">Sejtautomata</link>               
        </para>
        <para>
            A John Horton Conway féle Életjáték szabályai:

        </para> 
        <para>
            A sejt meghal, ha:
        </para>
        <itemizedlist>
            <listitem><para>3nál több szomszédja van.</para></listitem>
            <listitem><para>2nél kevesebb szomszédja van.</para></listitem>
         </itemizedlist>     
        <para>
            A sejt túléli, ha:
        </para>
        <itemizedlist>
            <listitem><para>2 vagy 3 szomszédja van.</para></listitem>
        </itemizedlist>  
        <para>
            Új sejt születik, ha pontosan 3 sejt veszi körül.
            Képek a játékról :
        </para>    
        <mediaobject>
            <imageobject>
                    <imagedata fileref="./Conway/sejtautomata1.png"/>
                </imageobject>
            </mediaobject> 
            <mediaobject>
            <imageobject>
                    <imagedata fileref="./Conway/sejtautomata2.png"/>
                </imageobject>
            </mediaobject> 
            <mediaobject>
            <imageobject>
                    <imagedata fileref="./Conway/sejtautomata3.png"/>
                </imageobject>
            </mediaobject> 
            <mediaobject>
            <imageobject>
                    <imagedata fileref="./Conway/sejtautomata4.png"/>
                </imageobject>
            </mediaobject> 

    </section>        
    <section>
        <title>Qt C++ életjáték</title>
        <para>
            Most Qt C++-ban!
        </para>
        <para>
            Megoldás forrása: <link xlink:href="./Conway/qtcpp/main.cpp">Sejtautomata_cpp</link>               
        </para>
        <para>
            Megoldás videó: a hivatkozott blogba ágyazva. 
        </para>
        <para>
            Ez a verzió a Java megfelelőjének tökéletes másolata c++-ban. 
            A sikló kilövőröl egy pár kép működés közben:
        </para> 
         <figure>
            <title>Qt c++ siklókilövő</title>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="./Conway/qtcpp/qtcpp.png" width="80%" />
                </imageobject>
            </mediaobject>
        </figure>
         <figure>
            <title>Qt c++ siklókilövő egy kis idő</title>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="./Conway/qtcpp/qtcpp2.png" width="80%" />
                </imageobject>
            </mediaobject>
        </figure>     
    </section>        
    <section>
        <title>BrainB Benchmark</title>
        <para>
        </para>
        <para>
            Megoldás videó: initial hack: <link xlink:href="https://www.twitch.tv/videos/139186614">https://www.twitch.tv/videos/139186614</link>
        </para>
        <para>
            Megoldás forrása: <link xlink:href="./Conway/BrainB">BrainB</link>             
        </para>
        <para>
            A BrainB egy Benchmark program amivel bárki lemérheti mekkora potenciál van benne az e-sport terén, illetve, hogy mennyire ügyes kizonyos játékelemekben. További a program készít egy e-sportoló profil az felhasználó képességei alapján.
        </para>         
        <figure>
            <title>BrainB futtatás közben</title>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="./Conway/BrainB/BrainB.png" width="80%" />
                </imageobject>
            </mediaobject>
        </figure> 

    </section>        
    <section>
        <title>Vörös Pipacs Pokol/19 RF</title>
        <para>
            Megoldás videó: <link xlink:href="https://youtu.be/VP0kfvRYD1Y">https://youtu.be/VP0kfvRYD1Y</link>      
        </para>
        <para>
            Megoldás forrása: <link xlink:href="https://github.com/nbatfai/RedFlowerHell">https://github.com/nbatfai/RedFlowerHell</link>               
        </para>
        <para>
            Tanulságok, tapasztalatok, magyarázat... ezt kell az olvasónak kidolgoznia, mint labor- vagy otthoni mérési feladatot!
            Ha mi már megtettük, akkor használd azt, dolgozd fel, javítsd, adj hozzá értéket!
        </para>            
    </section

</chapter>                
